/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 ./assets/jar.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, MeshTransmissionMaterial } from '@react-three/drei'
import { useControls } from 'leva';
import { useFrame } from '@react-three/fiber';
import * as THREE from 'three';

export function Jar({
  color = new THREE.Color( 0xFFFFFF ), 
  ...props}) 
{
  const { nodes, materials } = useGLTF('/assets/jar.glb')

  // add customizable properties to glass material
  const glassMaterialProps = {
    thickness: { value: 0.02, min: 0, max: 3, step: 0.05 },
    roughness: { value: 0, min: 0, max: 1, step: 0.1 },
    transmission: { value: 1, min: 0, max: 1, step: 0.1 },
    ior: { value: 1, min: 0, max: 1, step: 0.1 },
    chromaticAberration: { value: 0.02, min: 0, max: 1 },
    backside: { value: true }
  };
  //glassMaterialProps = useControls(glassMaterialProps); <= use when you want to adjust values in UI

  // convert to normal props
  for (let prop in glassMaterialProps) {
    glassMaterialProps[prop] = glassMaterialProps[prop].value;
  }

  const jarRef = useRef();
  const rimRef = useRef();
  useFrame( () => {
    jarRef.current.rotation.y += 0.001;
    if (jarRef.current) {
      rimRef.current.material.color.lerp(new THREE.Color(color), 0.05);
    }
  });

  return (
    <group {...props} ref={jarRef} dispose={null}>
      <group position={[0, 0, 0]}>
        
        {/** glass part of jar */}
        <mesh geometry={nodes.Cube.geometry}>
          <MeshTransmissionMaterial {...glassMaterialProps} />
        </mesh>

        {/** Jar lid and rim */}
        <mesh geometry={nodes.Cube_1.geometry} >
          <meshStandardMaterial 
            color={new THREE.Color( 0x111111 )} 
            roughness={0.0}
          />
        </mesh>
        <mesh ref={rimRef} geometry={nodes.Cube_2.geometry} >
          <meshLambertMaterial 
            color={color} 
            roughness={0.1}
          />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('assets/jar.glb');
